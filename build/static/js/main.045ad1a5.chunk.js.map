{"version":3,"sources":["TodoItem.js","App.js","index.js"],"names":["TodoItem","props","handleDelete","bind","todoItem","this","onClick","deleteItem","index","Component","App","state","inputValue","list","show","handleBtnClick","handleInputChange","handleItemDelete","toggleButton","htmlFor","id","type","className","value","onChange","getTodoItem","setState","map","item","key","e","target","prevState","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAiBeA,E,kDAdb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,qDAIT,IACAC,EAAaC,KAAKJ,MAAlBG,SACR,OAAO,yBAAKE,QAASD,KAAKH,cAAeE,K,qCAE3B,IAAD,EACiBC,KAAKJ,OACnCM,EAFa,EACLA,YADK,EACOC,W,GAVDC,aCqFRC,G,wDAjFb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,WAAY,GACZC,KAAM,GACNC,MAAM,GAER,EAAKC,eAAiB,EAAKA,eAAeZ,KAApB,gBACtB,EAAKa,kBAAoB,EAAKA,kBAAkBb,KAAvB,gBACzB,EAAKc,iBAAmB,EAAKA,iBAAiBd,KAAtB,gBACxB,EAAKe,aAAe,EAAKA,aAAaf,KAAlB,gBAVH,E,qDAcjB,OACE,kBAAC,WAAD,KAEE,2BAAOgB,QAAQ,SAAf,sBACA,2BACEC,GAAG,QACHC,KAAK,OACLC,UAAU,QACVC,MAAOlB,KAAKM,MAAMC,WAClBY,SAAUnB,KAAKW,oBAEjB,4BAAQV,QAASD,KAAKU,gBAAtB,gBACA,4BAAQT,QAASD,KAAKa,cAAtB,UACA,4BAAKb,KAAKoB,kB,qCAIA,IAAD,OACbpB,KAAKqB,UAAS,iBAAO,CAAEZ,OAAM,EAAKH,MAAMG,W,oCAE3B,IAAD,OACZ,OAAOT,KAAKM,MAAME,KAAKc,KAAI,SAACC,EAAMpB,GAChC,OACE,kBAAC,EAAD,CACEqB,IAAKrB,EACLA,MAAOA,EACPJ,SAAUwB,EACVrB,WAAY,EAAKU,wB,wCAKPa,GAChB,IAAMP,EAAQO,EAAEC,OAAOR,MACvBlB,KAAKqB,UAAS,iBAAO,CACnBd,WAAYW,Q,uCAOdlB,KAAKqB,UAAS,SAACM,GAAD,MAAgB,CAC5BnB,KAAK,GAAD,mBAAMmB,EAAUnB,MAAhB,CAAsBmB,EAAUpB,aACpCA,WAAY,S,uCAOCJ,GAGfH,KAAKqB,UAAS,SAACM,GACb,IAAMnB,EAAI,YAAOmB,EAAUnB,MAE3B,OADAA,EAAKoB,OAAOzB,EAAO,GACZ,CAAEK,e,GAxEGJ,cCDlByB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.045ad1a5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass TodoItem extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n  render() {\n    const { todoItem } = this.props;\n    return <div onClick={this.handleDelete}>{todoItem}</div>;\n  }\n  handleDelete() {\n    const { deleteItem, index } = this.props;\n    deleteItem(index);\n  }\n}\n\nexport default TodoItem;\n","/* eslint-disable no-useless-constructor */\nimport React, { Component, Fragment } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport \"./style.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      list: [],\n      show: false,\n    };\n    this.handleBtnClick = this.handleBtnClick.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleItemDelete = this.handleItemDelete.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n    \n  }\n  render() {\n    return (\n      <Fragment>\n        {/*下面是一个input*/}\n        <label htmlFor=\"input\">输入框</label>\n        <input\n          id=\"input\"\n          type=\"text\"\n          className=\"input\"\n          value={this.state.inputValue}\n          onChange={this.handleInputChange}\n        />\n        <button onClick={this.handleBtnClick}>提交</button>\n        <button onClick={this.toggleButton}>Toggle</button>\n        <ul>{this.getTodoItem()}</ul>\n      </Fragment>\n    );\n  }\n  toggleButton() {\n    this.setState(() => ({ show: this.state.show ? true : false }));\n  }\n  getTodoItem() {\n    return this.state.list.map((item, index) => {\n      return (\n        <TodoItem\n          key={index}\n          index={index}\n          todoItem={item}\n          deleteItem={this.handleItemDelete}\n        ></TodoItem>\n      );\n    });\n  }\n  handleInputChange(e) {\n    const value = e.target.value;\n    this.setState(() => ({\n      inputValue: value,\n    }));\n    // this.setState({\n    //   inputValue: e.target.value,\n    // });\n  }\n  handleBtnClick() {\n    this.setState((prevState) => ({\n      list: [...prevState.list, prevState.inputValue],\n      inputValue: \"\",\n    }));\n    // this.setState({\n    //   list: [...this.state.list, this.state.inputValue],\n    //   inputValue: \"\",\n    // });\n  }\n  handleItemDelete(index) {\n    //immutable\n    //state 不允许我们做任何改变\n    this.setState((prevState) => {\n      const list = [...prevState.list];\n      list.splice(index, 1);\n      return { list };\n    });\n    // const list = [...this.state.list];\n    // list.splice(index, 1);\n    // this.setState({\n    //   list: list,\n    // });\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}